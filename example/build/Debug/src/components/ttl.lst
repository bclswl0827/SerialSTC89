                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module ttl
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _putchar
                                     12 	.globl _SerialAvailable
                                     13 	.globl _SerialRead
                                     14 	.globl _SerialPrintln
                                     15 	.globl _SerialPrint
                                     16 	.globl _SerialWrite
                                     17 	.globl _SerialFlush
                                     18 	.globl _SerialSetTimeout
                                     19 	.globl _SerialEnd
                                     20 	.globl _SerialBegin
                                     21 	.globl _CP_RL2
                                     22 	.globl _C_T2
                                     23 	.globl _TR2
                                     24 	.globl _EXEN2
                                     25 	.globl _TCLK
                                     26 	.globl _RCLK
                                     27 	.globl _EXF2
                                     28 	.globl _TF2
                                     29 	.globl _T2
                                     30 	.globl _T2EX
                                     31 	.globl _RI
                                     32 	.globl _TI
                                     33 	.globl _RB8
                                     34 	.globl _TB8
                                     35 	.globl _REN
                                     36 	.globl _SM2
                                     37 	.globl _SM1
                                     38 	.globl _SM0
                                     39 	.globl _RXD
                                     40 	.globl _TXD
                                     41 	.globl _INT0
                                     42 	.globl _INT1
                                     43 	.globl _T0
                                     44 	.globl _T1
                                     45 	.globl _WR
                                     46 	.globl _RD
                                     47 	.globl _PX0
                                     48 	.globl _PT0
                                     49 	.globl _PX1
                                     50 	.globl _PT1
                                     51 	.globl _PS
                                     52 	.globl _PT2
                                     53 	.globl _EX0
                                     54 	.globl _ET0
                                     55 	.globl _EX1
                                     56 	.globl _ET1
                                     57 	.globl _ES
                                     58 	.globl _ET2
                                     59 	.globl _EA
                                     60 	.globl _IT0
                                     61 	.globl _IE0
                                     62 	.globl _IT1
                                     63 	.globl _IE1
                                     64 	.globl _TR0
                                     65 	.globl _TF0
                                     66 	.globl _TR1
                                     67 	.globl _TF1
                                     68 	.globl _P
                                     69 	.globl _OV
                                     70 	.globl _RS0
                                     71 	.globl _RS1
                                     72 	.globl _F0
                                     73 	.globl _AC
                                     74 	.globl _CY
                                     75 	.globl _P37
                                     76 	.globl _P36
                                     77 	.globl _P35
                                     78 	.globl _P34
                                     79 	.globl _P33
                                     80 	.globl _P32
                                     81 	.globl _P31
                                     82 	.globl _P30
                                     83 	.globl _P27
                                     84 	.globl _P26
                                     85 	.globl _P25
                                     86 	.globl _P24
                                     87 	.globl _P23
                                     88 	.globl _P22
                                     89 	.globl _P21
                                     90 	.globl _P20
                                     91 	.globl _P17
                                     92 	.globl _P16
                                     93 	.globl _P15
                                     94 	.globl _P14
                                     95 	.globl _P13
                                     96 	.globl _P12
                                     97 	.globl _P11
                                     98 	.globl _P10
                                     99 	.globl _P07
                                    100 	.globl _P06
                                    101 	.globl _P05
                                    102 	.globl _P04
                                    103 	.globl _P03
                                    104 	.globl _P02
                                    105 	.globl _P01
                                    106 	.globl _P00
                                    107 	.globl _TH2
                                    108 	.globl _TL2
                                    109 	.globl _RCAP2H
                                    110 	.globl _RCAP2L
                                    111 	.globl _T2CON
                                    112 	.globl _SBUF
                                    113 	.globl _SCON
                                    114 	.globl _IP
                                    115 	.globl _IE
                                    116 	.globl _TH1
                                    117 	.globl _TH0
                                    118 	.globl _TL1
                                    119 	.globl _TL0
                                    120 	.globl _TMOD
                                    121 	.globl _TCON
                                    122 	.globl _PCON
                                    123 	.globl _DPH
                                    124 	.globl _DPL
                                    125 	.globl _SP
                                    126 	.globl _B
                                    127 	.globl _ACC
                                    128 	.globl _PSW
                                    129 	.globl _P3
                                    130 	.globl _P2
                                    131 	.globl _P1
                                    132 	.globl _P0
                                    133 ;--------------------------------------------------------
                                    134 ; special function registers
                                    135 ;--------------------------------------------------------
                                    136 	.area RSEG    (ABS,DATA)
      000000                        137 	.org 0x0000
                           000080   138 _P0	=	0x0080
                           000090   139 _P1	=	0x0090
                           0000A0   140 _P2	=	0x00a0
                           0000B0   141 _P3	=	0x00b0
                           0000D0   142 _PSW	=	0x00d0
                           0000E0   143 _ACC	=	0x00e0
                           0000F0   144 _B	=	0x00f0
                           000081   145 _SP	=	0x0081
                           000082   146 _DPL	=	0x0082
                           000083   147 _DPH	=	0x0083
                           000087   148 _PCON	=	0x0087
                           000088   149 _TCON	=	0x0088
                           000089   150 _TMOD	=	0x0089
                           00008A   151 _TL0	=	0x008a
                           00008B   152 _TL1	=	0x008b
                           00008C   153 _TH0	=	0x008c
                           00008D   154 _TH1	=	0x008d
                           0000A8   155 _IE	=	0x00a8
                           0000B8   156 _IP	=	0x00b8
                           000098   157 _SCON	=	0x0098
                           000099   158 _SBUF	=	0x0099
                           0000C8   159 _T2CON	=	0x00c8
                           0000CA   160 _RCAP2L	=	0x00ca
                           0000CB   161 _RCAP2H	=	0x00cb
                           0000CC   162 _TL2	=	0x00cc
                           0000CD   163 _TH2	=	0x00cd
                                    164 ;--------------------------------------------------------
                                    165 ; special function bits
                                    166 ;--------------------------------------------------------
                                    167 	.area RSEG    (ABS,DATA)
      000000                        168 	.org 0x0000
                           000080   169 _P00	=	0x0080
                           000081   170 _P01	=	0x0081
                           000082   171 _P02	=	0x0082
                           000083   172 _P03	=	0x0083
                           000084   173 _P04	=	0x0084
                           000085   174 _P05	=	0x0085
                           000086   175 _P06	=	0x0086
                           000087   176 _P07	=	0x0087
                           000090   177 _P10	=	0x0090
                           000091   178 _P11	=	0x0091
                           000092   179 _P12	=	0x0092
                           000093   180 _P13	=	0x0093
                           000094   181 _P14	=	0x0094
                           000095   182 _P15	=	0x0095
                           000096   183 _P16	=	0x0096
                           000097   184 _P17	=	0x0097
                           0000A0   185 _P20	=	0x00a0
                           0000A1   186 _P21	=	0x00a1
                           0000A2   187 _P22	=	0x00a2
                           0000A3   188 _P23	=	0x00a3
                           0000A4   189 _P24	=	0x00a4
                           0000A5   190 _P25	=	0x00a5
                           0000A6   191 _P26	=	0x00a6
                           0000A7   192 _P27	=	0x00a7
                           0000B0   193 _P30	=	0x00b0
                           0000B1   194 _P31	=	0x00b1
                           0000B2   195 _P32	=	0x00b2
                           0000B3   196 _P33	=	0x00b3
                           0000B4   197 _P34	=	0x00b4
                           0000B5   198 _P35	=	0x00b5
                           0000B6   199 _P36	=	0x00b6
                           0000B7   200 _P37	=	0x00b7
                           0000D7   201 _CY	=	0x00d7
                           0000D6   202 _AC	=	0x00d6
                           0000D5   203 _F0	=	0x00d5
                           0000D4   204 _RS1	=	0x00d4
                           0000D3   205 _RS0	=	0x00d3
                           0000D2   206 _OV	=	0x00d2
                           0000D0   207 _P	=	0x00d0
                           00008F   208 _TF1	=	0x008f
                           00008E   209 _TR1	=	0x008e
                           00008D   210 _TF0	=	0x008d
                           00008C   211 _TR0	=	0x008c
                           00008B   212 _IE1	=	0x008b
                           00008A   213 _IT1	=	0x008a
                           000089   214 _IE0	=	0x0089
                           000088   215 _IT0	=	0x0088
                           0000AF   216 _EA	=	0x00af
                           0000AD   217 _ET2	=	0x00ad
                           0000AC   218 _ES	=	0x00ac
                           0000AB   219 _ET1	=	0x00ab
                           0000AA   220 _EX1	=	0x00aa
                           0000A9   221 _ET0	=	0x00a9
                           0000A8   222 _EX0	=	0x00a8
                           0000BD   223 _PT2	=	0x00bd
                           0000BC   224 _PS	=	0x00bc
                           0000BB   225 _PT1	=	0x00bb
                           0000BA   226 _PX1	=	0x00ba
                           0000B9   227 _PT0	=	0x00b9
                           0000B8   228 _PX0	=	0x00b8
                           0000B7   229 _RD	=	0x00b7
                           0000B6   230 _WR	=	0x00b6
                           0000B5   231 _T1	=	0x00b5
                           0000B4   232 _T0	=	0x00b4
                           0000B3   233 _INT1	=	0x00b3
                           0000B2   234 _INT0	=	0x00b2
                           0000B1   235 _TXD	=	0x00b1
                           0000B0   236 _RXD	=	0x00b0
                           00009F   237 _SM0	=	0x009f
                           00009E   238 _SM1	=	0x009e
                           00009D   239 _SM2	=	0x009d
                           00009C   240 _REN	=	0x009c
                           00009B   241 _TB8	=	0x009b
                           00009A   242 _RB8	=	0x009a
                           000099   243 _TI	=	0x0099
                           000098   244 _RI	=	0x0098
                           000091   245 _T2EX	=	0x0091
                           000090   246 _T2	=	0x0090
                           0000CF   247 _TF2	=	0x00cf
                           0000CE   248 _EXF2	=	0x00ce
                           0000CD   249 _RCLK	=	0x00cd
                           0000CC   250 _TCLK	=	0x00cc
                           0000CB   251 _EXEN2	=	0x00cb
                           0000CA   252 _TR2	=	0x00ca
                           0000C9   253 _C_T2	=	0x00c9
                           0000C8   254 _CP_RL2	=	0x00c8
                                    255 ;--------------------------------------------------------
                                    256 ; overlayable register banks
                                    257 ;--------------------------------------------------------
                                    258 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        259 	.ds 8
                                    260 ;--------------------------------------------------------
                                    261 ; internal ram data
                                    262 ;--------------------------------------------------------
                                    263 	.area DSEG    (DATA)
                                    264 ;--------------------------------------------------------
                                    265 ; overlayable items in internal ram 
                                    266 ;--------------------------------------------------------
                                    267 	.area	OSEG    (OVR,DATA)
                                    268 	.area	OSEG    (OVR,DATA)
                                    269 ;--------------------------------------------------------
                                    270 ; indirectly addressable internal ram data
                                    271 ;--------------------------------------------------------
                                    272 	.area ISEG    (DATA)
                                    273 ;--------------------------------------------------------
                                    274 ; absolute internal ram data
                                    275 ;--------------------------------------------------------
                                    276 	.area IABS    (ABS,DATA)
                                    277 	.area IABS    (ABS,DATA)
                                    278 ;--------------------------------------------------------
                                    279 ; bit data
                                    280 ;--------------------------------------------------------
                                    281 	.area BSEG    (BIT)
                                    282 ;--------------------------------------------------------
                                    283 ; paged external ram data
                                    284 ;--------------------------------------------------------
                                    285 	.area PSEG    (PAG,XDATA)
                                    286 ;--------------------------------------------------------
                                    287 ; external ram data
                                    288 ;--------------------------------------------------------
                                    289 	.area XSEG    (XDATA)
                                    290 ;--------------------------------------------------------
                                    291 ; absolute external ram data
                                    292 ;--------------------------------------------------------
                                    293 	.area XABS    (ABS,XDATA)
                                    294 ;--------------------------------------------------------
                                    295 ; external initialized ram data
                                    296 ;--------------------------------------------------------
                                    297 	.area XISEG   (XDATA)
                                    298 	.area HOME    (CODE)
                                    299 	.area GSINIT0 (CODE)
                                    300 	.area GSINIT1 (CODE)
                                    301 	.area GSINIT2 (CODE)
                                    302 	.area GSINIT3 (CODE)
                                    303 	.area GSINIT4 (CODE)
                                    304 	.area GSINIT5 (CODE)
                                    305 	.area GSINIT  (CODE)
                                    306 	.area GSFINAL (CODE)
                                    307 	.area CSEG    (CODE)
                                    308 ;--------------------------------------------------------
                                    309 ; global & static initialisations
                                    310 ;--------------------------------------------------------
                                    311 	.area HOME    (CODE)
                                    312 	.area GSINIT  (CODE)
                                    313 	.area GSFINAL (CODE)
                                    314 	.area GSINIT  (CODE)
                                    315 ;--------------------------------------------------------
                                    316 ; Home
                                    317 ;--------------------------------------------------------
                                    318 	.area HOME    (CODE)
                                    319 	.area HOME    (CODE)
                                    320 ;--------------------------------------------------------
                                    321 ; code
                                    322 ;--------------------------------------------------------
                                    323 	.area CSEG    (CODE)
                                    324 ;------------------------------------------------------------
                                    325 ;Allocation info for local variables in function 'SerialBegin'
                                    326 ;------------------------------------------------------------
                                    327 ;b                         Allocated to registers r4 r5 r6 r7 
                                    328 ;------------------------------------------------------------
                                    329 ;	./src/components/ttl.c:8: void SerialBegin(uint32_t b) {
                                    330 ;	-----------------------------------------
                                    331 ;	 function SerialBegin
                                    332 ;	-----------------------------------------
      000000                        333 _SerialBegin:
                           000007   334 	ar7 = 0x07
                           000006   335 	ar6 = 0x06
                           000005   336 	ar5 = 0x05
                           000004   337 	ar4 = 0x04
                           000003   338 	ar3 = 0x03
                           000002   339 	ar2 = 0x02
                           000001   340 	ar1 = 0x01
                           000000   341 	ar0 = 0x00
      000000 AC 82            [24]  342 	mov	r4,dpl
      000002 AD 83            [24]  343 	mov	r5,dph
      000004 AE F0            [24]  344 	mov	r6,b
      000006 FF               [12]  345 	mov	r7,a
                                    346 ;	./src/components/ttl.c:10: PCON = 0x80;
      000007 75 87 80         [24]  347 	mov	_PCON,#0x80
                                    348 ;	./src/components/ttl.c:12: SCON = 0x50;
      00000A 75 98 50         [24]  349 	mov	_SCON,#0x50
                                    350 ;	./src/components/ttl.c:14: TMOD = 0x20;
      00000D 75 89 20         [24]  351 	mov	_TMOD,#0x20
                                    352 ;	./src/components/ttl.c:16: TH1 = TL1 = -(CRYSTAL / 12 / 32 / (b / 2));
      000010 EF               [12]  353 	mov	a,r7
      000011 C3               [12]  354 	clr	c
      000012 13               [12]  355 	rrc	a
      000013 F5*03            [12]  356 	mov	(__divulong_PARM_2 + 3),a
      000015 EE               [12]  357 	mov	a,r6
      000016 13               [12]  358 	rrc	a
      000017 F5*02            [12]  359 	mov	(__divulong_PARM_2 + 2),a
      000019 ED               [12]  360 	mov	a,r5
      00001A 13               [12]  361 	rrc	a
      00001B F5*01            [12]  362 	mov	(__divulong_PARM_2 + 1),a
      00001D EC               [12]  363 	mov	a,r4
      00001E 13               [12]  364 	rrc	a
      00001F F5*00            [12]  365 	mov	__divulong_PARM_2,a
      000021 90 70 80         [24]  366 	mov	dptr,#0x7080
      000024 E4               [12]  367 	clr	a
      000025 F5 F0            [12]  368 	mov	b,a
      000027 12r00r00         [24]  369 	lcall	__divulong
      00002A AC 82            [24]  370 	mov	r4,dpl
      00002C C3               [12]  371 	clr	c
      00002D E4               [12]  372 	clr	a
      00002E 9C               [12]  373 	subb	a,r4
      00002F FC               [12]  374 	mov	r4,a
      000030 8C 8B            [24]  375 	mov	_TL1,r4
      000032 8C 8D            [24]  376 	mov	_TH1,r4
                                    377 ;	./src/components/ttl.c:18: TR1 = EA = ES = 1;
                                    378 ;	assignBit
      000034 D2 AC            [12]  379 	setb	_ES
                                    380 ;	assignBit
      000036 A2 AC            [12]  381 	mov	c,_ES
      000038 92 AF            [24]  382 	mov	_EA,c
                                    383 ;	assignBit
      00003A A2 AF            [12]  384 	mov	c,_EA
      00003C 92 8E            [24]  385 	mov	_TR1,c
                                    386 ;	./src/components/ttl.c:19: }
      00003E 22               [24]  387 	ret
                                    388 ;------------------------------------------------------------
                                    389 ;Allocation info for local variables in function 'SerialEnd'
                                    390 ;------------------------------------------------------------
                                    391 ;	./src/components/ttl.c:22: void SerialEnd() {
                                    392 ;	-----------------------------------------
                                    393 ;	 function SerialEnd
                                    394 ;	-----------------------------------------
      00003F                        395 _SerialEnd:
                                    396 ;	./src/components/ttl.c:24: EA = ES = 0;
                                    397 ;	assignBit
      00003F C2 AC            [12]  398 	clr	_ES
                                    399 ;	assignBit
      000041 A2 AC            [12]  400 	mov	c,_ES
      000043 92 AF            [24]  401 	mov	_EA,c
                                    402 ;	./src/components/ttl.c:25: }
      000045 22               [24]  403 	ret
                                    404 ;------------------------------------------------------------
                                    405 ;Allocation info for local variables in function 'SerialSetTimeout'
                                    406 ;------------------------------------------------------------
                                    407 ;t                         Allocated to registers r4 r5 r6 r7 
                                    408 ;------------------------------------------------------------
                                    409 ;	./src/components/ttl.c:28: void SerialSetTimeout(uint32_t t) {
                                    410 ;	-----------------------------------------
                                    411 ;	 function SerialSetTimeout
                                    412 ;	-----------------------------------------
      000046                        413 _SerialSetTimeout:
      000046 AC 82            [24]  414 	mov	r4,dpl
      000048 AD 83            [24]  415 	mov	r5,dph
                                    416 ;	./src/components/ttl.c:30: TMOD = 0x01;
      00004A 75 89 01         [24]  417 	mov	_TMOD,#0x01
                                    418 ;	./src/components/ttl.c:32: TH0 = (t >> 8) & 0xff;
      00004D 8D 8C            [24]  419 	mov	_TH0,r5
                                    420 ;	./src/components/ttl.c:33: TL0 = t & 0xff;
      00004F 8C 8A            [24]  421 	mov	_TL0,r4
                                    422 ;	./src/components/ttl.c:35: TR0 = EA = ET0 = 1;
                                    423 ;	assignBit
      000051 D2 A9            [12]  424 	setb	_ET0
                                    425 ;	assignBit
      000053 A2 A9            [12]  426 	mov	c,_ET0
      000055 92 AF            [24]  427 	mov	_EA,c
                                    428 ;	assignBit
      000057 A2 AF            [12]  429 	mov	c,_EA
      000059 92 8C            [24]  430 	mov	_TR0,c
                                    431 ;	./src/components/ttl.c:36: }
      00005B 22               [24]  432 	ret
                                    433 ;------------------------------------------------------------
                                    434 ;Allocation info for local variables in function 'SerialFlush'
                                    435 ;------------------------------------------------------------
                                    436 ;	./src/components/ttl.c:39: void SerialFlush() {
                                    437 ;	-----------------------------------------
                                    438 ;	 function SerialFlush
                                    439 ;	-----------------------------------------
      00005C                        440 _SerialFlush:
                                    441 ;	./src/components/ttl.c:41: while (!TI) {
      00005C                        442 00101$:
                                    443 ;	./src/components/ttl.c:45: TI = 0;
                                    444 ;	assignBit
      00005C 10 99 02         [24]  445 	jbc	_TI,00114$
      00005F 80 FB            [24]  446 	sjmp	00101$
      000061                        447 00114$:
                                    448 ;	./src/components/ttl.c:46: }
      000061 22               [24]  449 	ret
                                    450 ;------------------------------------------------------------
                                    451 ;Allocation info for local variables in function 'SerialWrite'
                                    452 ;------------------------------------------------------------
                                    453 ;c                         Allocated to registers r7 
                                    454 ;------------------------------------------------------------
                                    455 ;	./src/components/ttl.c:49: void SerialWrite(uint8_t c) {
                                    456 ;	-----------------------------------------
                                    457 ;	 function SerialWrite
                                    458 ;	-----------------------------------------
      000062                        459 _SerialWrite:
      000062 AF 82            [24]  460 	mov	r7,dpl
                                    461 ;	./src/components/ttl.c:51: ES = 0;
                                    462 ;	assignBit
      000064 C2 AC            [12]  463 	clr	_ES
                                    464 ;	./src/components/ttl.c:53: SBUF = c;
      000066 8F 99            [24]  465 	mov	_SBUF,r7
                                    466 ;	./src/components/ttl.c:55: while (!TI) {
      000068                        467 00101$:
                                    468 ;	./src/components/ttl.c:59: TI = 0;
                                    469 ;	assignBit
      000068 10 99 02         [24]  470 	jbc	_TI,00114$
      00006B 80 FB            [24]  471 	sjmp	00101$
      00006D                        472 00114$:
                                    473 ;	./src/components/ttl.c:61: ES = !TI;
      00006D A2 99            [12]  474 	mov	c,_TI
      00006F B3               [12]  475 	cpl	c
      000070 92 AC            [24]  476 	mov	_ES,c
                                    477 ;	./src/components/ttl.c:62: }
      000072 22               [24]  478 	ret
                                    479 ;------------------------------------------------------------
                                    480 ;Allocation info for local variables in function 'SerialPrint'
                                    481 ;------------------------------------------------------------
                                    482 ;s                         Allocated to registers 
                                    483 ;------------------------------------------------------------
                                    484 ;	./src/components/ttl.c:65: void SerialPrint(char* s) {
                                    485 ;	-----------------------------------------
                                    486 ;	 function SerialPrint
                                    487 ;	-----------------------------------------
      000073                        488 _SerialPrint:
      000073 AD 82            [24]  489 	mov	r5,dpl
      000075 AE 83            [24]  490 	mov	r6,dph
      000077 AF F0            [24]  491 	mov	r7,b
                                    492 ;	./src/components/ttl.c:67: while (*s) {
      000079                        493 00101$:
      000079 8D 82            [24]  494 	mov	dpl,r5
      00007B 8E 83            [24]  495 	mov	dph,r6
      00007D 8F F0            [24]  496 	mov	b,r7
      00007F 12r00r00         [24]  497 	lcall	__gptrget
      000082 FC               [12]  498 	mov	r4,a
      000083 60 18            [24]  499 	jz	00104$
                                    500 ;	./src/components/ttl.c:68: SerialWrite(*s++);
      000085 8C 82            [24]  501 	mov	dpl,r4
      000087 0D               [12]  502 	inc	r5
      000088 BD 00 01         [24]  503 	cjne	r5,#0x00,00116$
      00008B 0E               [12]  504 	inc	r6
      00008C                        505 00116$:
      00008C C0 07            [24]  506 	push	ar7
      00008E C0 06            [24]  507 	push	ar6
      000090 C0 05            [24]  508 	push	ar5
      000092 12r00r62         [24]  509 	lcall	_SerialWrite
      000095 D0 05            [24]  510 	pop	ar5
      000097 D0 06            [24]  511 	pop	ar6
      000099 D0 07            [24]  512 	pop	ar7
      00009B 80 DC            [24]  513 	sjmp	00101$
      00009D                        514 00104$:
                                    515 ;	./src/components/ttl.c:70: }
      00009D 22               [24]  516 	ret
                                    517 ;------------------------------------------------------------
                                    518 ;Allocation info for local variables in function 'SerialPrintln'
                                    519 ;------------------------------------------------------------
                                    520 ;s                         Allocated to registers r5 r6 r7 
                                    521 ;------------------------------------------------------------
                                    522 ;	./src/components/ttl.c:73: void SerialPrintln(char* s) {
                                    523 ;	-----------------------------------------
                                    524 ;	 function SerialPrintln
                                    525 ;	-----------------------------------------
      00009E                        526 _SerialPrintln:
                                    527 ;	./src/components/ttl.c:75: SerialPrint(s);
      00009E 12r00r73         [24]  528 	lcall	_SerialPrint
                                    529 ;	./src/components/ttl.c:76: SerialPrint("\r\n");
      0000A1 90r00r00         [24]  530 	mov	dptr,#___str_0
      0000A4 75 F0 80         [24]  531 	mov	b,#0x80
                                    532 ;	./src/components/ttl.c:77: }
      0000A7 02r00r73         [24]  533 	ljmp	_SerialPrint
                                    534 ;------------------------------------------------------------
                                    535 ;Allocation info for local variables in function 'SerialRead'
                                    536 ;------------------------------------------------------------
                                    537 ;	./src/components/ttl.c:80: char SerialRead() {
                                    538 ;	-----------------------------------------
                                    539 ;	 function SerialRead
                                    540 ;	-----------------------------------------
      0000AA                        541 _SerialRead:
                                    542 ;	./src/components/ttl.c:82: while (!RI) {
      0000AA                        543 00101$:
                                    544 ;	./src/components/ttl.c:86: RI = 0;
                                    545 ;	assignBit
      0000AA 10 98 02         [24]  546 	jbc	_RI,00114$
      0000AD 80 FB            [24]  547 	sjmp	00101$
      0000AF                        548 00114$:
                                    549 ;	./src/components/ttl.c:88: return SBUF;
      0000AF 85 99 82         [24]  550 	mov	dpl,_SBUF
                                    551 ;	./src/components/ttl.c:89: }
      0000B2 22               [24]  552 	ret
                                    553 ;------------------------------------------------------------
                                    554 ;Allocation info for local variables in function 'SerialAvailable'
                                    555 ;------------------------------------------------------------
                                    556 ;	./src/components/ttl.c:92: uint8_t SerialAvailable() {
                                    557 ;	-----------------------------------------
                                    558 ;	 function SerialAvailable
                                    559 ;	-----------------------------------------
      0000B3                        560 _SerialAvailable:
                                    561 ;	./src/components/ttl.c:94: return RI;
      0000B3 A2 98            [12]  562 	mov	c,_RI
      0000B5 E4               [12]  563 	clr	a
      0000B6 33               [12]  564 	rlc	a
      0000B7 F5 82            [12]  565 	mov	dpl,a
                                    566 ;	./src/components/ttl.c:95: }
      0000B9 22               [24]  567 	ret
                                    568 ;------------------------------------------------------------
                                    569 ;Allocation info for local variables in function 'putchar'
                                    570 ;------------------------------------------------------------
                                    571 ;c                         Allocated to registers r7 
                                    572 ;------------------------------------------------------------
                                    573 ;	./src/components/ttl.c:98: uint8_t putchar(uint8_t c) {
                                    574 ;	-----------------------------------------
                                    575 ;	 function putchar
                                    576 ;	-----------------------------------------
      0000BA                        577 _putchar:
                                    578 ;	./src/components/ttl.c:100: SerialWrite(c);
      0000BA AF 82            [24]  579 	mov  r7,dpl
      0000BC C0 07            [24]  580 	push	ar7
      0000BE 12r00r62         [24]  581 	lcall	_SerialWrite
      0000C1 D0 07            [24]  582 	pop	ar7
                                    583 ;	./src/components/ttl.c:101: return c;
      0000C3 8F 82            [24]  584 	mov	dpl,r7
                                    585 ;	./src/components/ttl.c:102: }
      0000C5 22               [24]  586 	ret
                                    587 	.area CSEG    (CODE)
                                    588 	.area CONST   (CODE)
                                    589 	.area CONST   (CODE)
      000000                        590 ___str_0:
      000000 0D                     591 	.db 0x0d
      000001 0A                     592 	.db 0x0a
      000002 00                     593 	.db 0x00
                                    594 	.area CSEG    (CODE)
                                    595 	.area XINIT   (CODE)
                                    596 	.area CABS    (ABS,CODE)
